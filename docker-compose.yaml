services:
  mssql_db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "${DB_MASTER_PASSWORD}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $$MSSQL_SA_PASSWORD -Q "SELECT ''ping'' AS [Health];" || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql/data

  mssql_db_creator:
    image: r3dw4n/go-sqlcmd:latest
    restart: no
    depends_on:
      mssql_db:
        condition: service_healthy
    environment:
      DB_MASTER_PASSWORD: "${DB_MASTER_PASSWORD}"
      DB_DOCKER_HOST: "${DB_DOCKER_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    command: bash -c "python3 /db-init.py"
    volumes:
      - ./db-init.py:/db-init.py

  redis_db:
    image: "bitnami/redis:7.2"
    restart: unless-stopped
    depends_on:
      mssql_db_creator:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "6377:6379"
    volumes:
      - "redis_data_discussion_fleet:/bitnami/redis/data"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_IO_THREADS: 4
      REDIS_IO_THREADS_DO_READS: yes
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL

  web:
    build:
      context: .
      dockerfile: DiscussionFleet.Web/Dockerfile
    depends_on:
      redis_db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - web-app:/app
    ports:
      - "8045:8080"

  worker:
    build:
      context: .
      dockerfile: DiscussionFleet.EmailWorker/Dockerfile
    depends_on:
      redis_db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - worker-app:/app

volumes:
  mssql_data:
  redis_data_discussion_fleet:
  web-app:
  worker-app:
